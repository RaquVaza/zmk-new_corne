#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E     &kp R  &kp T                             &kp UP                &kp Y        &kp U  &kp I             &kp O    &kp P     &kp BSPC
&kp TAB     &kp A  &kp S  &kp D     &kp F  &kp G                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J  &kp K             &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C     &kp V  &kp B      &kp SPACE              &kp DOWN              &kp N        &kp M  &kp COMMA         &kp DOT  &kp FSLH  &kp LEFT_ALT
                          &kp LGUI  &mo 1  &kp SPACE                                               &lt 3 ENTER  &mo 2  &kp LEFT_CONTROL
            >;

            // sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &rgb_ug RGB_SPI  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &tog 3                                         &mmv MOVE_UP                     &kp N1        &kp N2  &kp NUMBER_3  &trans  &kp DELETE  &kp BSPC
&trans  &bt BT_CLR_ALL   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp NUMBER_4  &kp N5  &kp NUMBER_6  &trans  &kp HOME    &kp PG_UP
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON   &trans           &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp N7        &kp N8  &kp N9        &kp N0  &kp END     &kp PG_DN
                                          &trans           &trans           &trans                                                                          &kp INS       &trans  &kp N0
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp GRAVE  &kp K_FORWARD  &kp K_BACK    &kp K_PLAY_PAUSE  &trans     &trans                               &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK             &trans                 &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans     &bt BT_CLR     &mkp LCLK     &mkp MCLK         &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSLH          &kp TILDE
&trans     &out OUT_USB   &out OUT_BLE  &none             &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC              &kp RBRC               &kp PIPE          &kp BACKSPACE
                                        &trans            &trans     &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F10  &trans  &kp CAPSLOCK                          &kp UP                     &kp NUMBER_1      &kp NUMBER_2    &kp NUMBER_3  &trans         &trans             &to 0
&kp F4  &kp F5  &kp F6  &kp F11  &trans  &kp TAB                     &kp LEFT  &kp ENTER       &kp RIGHT  &kp NUMBER_4      &kp N5          &kp NUMBER_6  &kp LEFT_ALT   &trans             &trans
&kp F7  &kp F8  &kp F9  &kp F12  &trans  &kp ENTER     &kp C_MUTE              &kp DOWN_ARROW             &kp N7            &kp N8          &kp N9        &kp RIGHT_ALT  &kp RIGHT_CONTROL  &kp RIGHT_SHIFT
                        &tog 4   &trans  &kp LWIN                                                         &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp N0
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        game {
            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E      &kp R             &kp T                           &trans          &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB         &kp A  &kp S  &kp D      &kp F             &kp I                   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C      &kp V             &kp B         &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                              &kp SPACE  &kp LEFT_CONTROL  &kp LEFT_ALT                                    &to 0   &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
            label = "game";
        };
    };
};
